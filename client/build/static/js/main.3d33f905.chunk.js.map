{"version":3,"sources":["components/Header.js","utils/userContext.js","components/Nav/index.js","components/List/List.js","components/List/ListItem.js","components/ChecklistCard/ChecklistCard.js","utils/StickyState.js","containers/ChecklistManagment/ChecklistManagement.js","containers/Homepage/Homepage.js","components/AgGrid/MasterDetail.js","components/Bootstrap/Table/Table.js","components/Checklist/Checklist.js","utils/API.js","containers/Users/EditUser.js","containers/Users/Profile.js","containers/Users/Login.js","containers/Users/Signup.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useReducer","currentHeader","change","heading","subHeading","logo","logoAlt","logoLink","headerData","className","href","src","alt","name","UserContext","React","createContext","user","setUser","Nav","userContext","useContext","handleLogout","event","a","preventDefault","localStorage","removeItem","document","location","replace","onClick","List","props","children","ListItem","useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","ChecklistCard","classes","useState","editingTitle","setEditingTitle","checklistTitle","setChecklistTitle","Card","CardContent","Typography","variant","component","TextField","id","label","value","onChange","e","currentTarget","Button","size","saveChecklist","color","style","float","deleteChecklist","CardActions","canContinue","continue","canFillOut","fillOut","update","useStickyState","defaultValue","key","stickyValue","window","getItem","JSON","parse","setValue","useEffect","setItem","stringify","newChecklist","_id","phases","ChecklistManagement","checklists","setChecklists","currentChecklists","setCurrentChecklists","getChecklists","axios","get","checklistsResponse","data","goToUpdateChecklist","fillOutChecklist","checklist","filter","ck","length","_","cloneDeep","template","continueCurrentChecklist","currentChecklist","createNewChecklist","post","checklistId","delete","Grid","container","item","map","find","phase","index","Homepage","now","DateTime","toFormat","initialState","modules","ClientSideRowModelModule","MasterDetailModule","MenuModule","ColumnsToolPanelModule","columnDefs","field","headerName","cellRenderer","hide","defaultColDef","flex","editable","popupParent","querySelector","detailCellRendererParams","detailGridOptions","headerClass","maxWidth","sortable","rowDrag","onGridReady","params","columnApi","applyColumnState","state","colId","sort","defaultState","sortModel","defaultGroupSortComparator","b","line","resizable","headerHeight","getRowNodeId","row","getContextMenuItems","onCellValueChanged","stopEditingWhenGridLosesFocus","animateRows","getDetailRowData","successCallback","tasks","rowData","order","finalReview","finalReviewDate","review","reviewDate","prepared","preparedDate","explanationRef","templateRef","mfiRef","instruction","GridExample","setData","gridApi","useRef","gridColumnApi","sortActive","forEach","task","phaseId","action","node","rows","api","forEachNode","push","console","log","phasesToAdd","createNewPhase","phasesToUpdate","concat","applyTransaction","add","newTask","createNewTask","tasksToAdd","tasksToUpdate","cssClasses","uuidv4","onRowDragMove","movingNode","overNode","rowNeedsToMove","movingData","overData","fromIndex","indexOf","toIndex","newStore","slice","arr","element","splice","moveInArray","setRowData","clearFocusedCell","onSortChanged","current","getSortModel","suppressRowDrag","setSuppressRowDrag","colDef","newVal","oldVal","oldValue","siblings","sibling","width","height","masterDetail","Table","columnHeadings","explanation","Checklist","loginUser","loginData","createUser","userData","updateUser","put","EditUser","idRef","firstRef","middleRef","lastRef","emailRef","passRef","confirmPassRef","handleUpdate","alert","firstname","middlename","lastname","email","password","API","response","ok","statusText","onSubmit","type","ref","placeholder","Profile","Login","handleLogin","then","res","catch","error","Signup","handleSignup","Footer","initFooter","text","Date","getFullYear","currentFooter","footerData","App","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sUAEA,SAASA,IAAQ,MAauBC,sBAJpC,SAAsBC,EAAeC,GACjC,OAAO,2BAAID,GAAX,IAA0BC,aATX,CACfC,QAAS,+BACTC,WAAY,sCACZC,KAAM,aACNC,QAAS,OACTC,SAAU,MAND,mBAaNC,EAbM,UAeb,OACI,wBAAQC,UAAU,kBAAlB,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,oBAAGC,KAAMF,EAAWD,SAApB,UACI,qBAAKI,IAAKH,EAAWH,KAAMO,IAAKJ,EAAWF,UAC3C,sBAAMG,UAAU,yDAAhB,SAA0ED,EAAWK,YAG7F,sBAAKJ,UAAU,WAAf,UACI,sBAAMA,UAAU,qCAAhB,SAAsDD,EAAWJ,aADrE,Y,6BCxBVU,EAAcC,IAAMC,cAAc,CACtCC,KAAM,GACNC,QAAS,eC2BIC,MA5Bf,WACE,IAAMC,EAAcC,qBAAWP,GAEzBQ,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACnBD,EAAME,iBAKNC,aAAaC,WAAW,QACxBC,SAASC,SAASC,QAAQ,KAPP,2CAAH,sDAUlB,OACE,sBAAKrB,UAAU,6HAAf,UACE,qBAAKA,UAAU,0BACf,mBAAGA,UAAU,0BAA0BC,KAAK,IAA5C,kBAGCU,EAAYH,KACX,mBAAGR,UAAU,0BAA0BC,KAAK,gBAAgBqB,QAAST,EAArE,oBAEA,mBAAGb,UAAU,0BAA0BC,KAAK,eAA5C,uB,kCCvBO,SAASsB,EAAKC,GACzB,OACI,oBAAIxB,UAAU,aAAd,SACKwB,EAAMC,WCHJ,SAASC,EAASF,GAC7B,OACI,oBAAIxB,UAAU,kBAAd,SACKwB,EAAMC,W,mECIbE,EAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,KAEdC,OAAQ,CACJC,QAAS,eACTC,OAAQ,QACRC,UAAW,cAEfC,MAAO,CACHC,SAAU,IAEdC,IAAK,CACDC,aAAc,MAIP,SAASC,EAAcf,GAClC,IAAMgB,EAAUb,IADyB,GAEXa,EAAQT,OACEU,oBAASjB,EAAMW,QAHd,mBAGlCO,EAHkC,KAGpBC,EAHoB,OAIGF,mBAASjB,EAAMW,OAJlB,mBAIlCS,EAJkC,KAIlBC,EAJkB,KAMzC,OACI,eAACC,EAAA,EAAD,CAAM9C,UAAWwC,EAAQX,KAAzB,UACI,eAACkB,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,UAEQR,EACI,qCACI,cAACS,EAAA,EAAD,CACIC,GAAG,iBACHC,MAAM,kBACNJ,QAAQ,WACRK,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAOX,EAAkBW,EAAEC,cAAcH,UAEvD,cAACI,EAAA,EAAD,CAAQT,QAAQ,YAAYU,KAAK,QAAQrC,QAAS,SAAAkC,GAC9ChC,EAAMoC,cAAchB,GACpBD,GAAgB,IAFpB,2BAKJ,qCACKC,EACD,cAACc,EAAA,EAAD,CAAQT,QAAQ,YAAYU,KAAK,QAAQrC,QAAS,SAAAkC,GAAC,OAAIb,GAAgB,IAAvE,2BAGZ,cAACe,EAAA,EAAD,CAAQT,QAAQ,YAAYU,KAAK,QAAQE,MAAM,YAAYC,MAAO,CAACC,MAAO,SAAUzC,QAAS,SAAAkC,GAAC,OAAIhC,EAAMwC,gBAAgBxC,EAAM4B,KAA9H,uBAEJ,cAACJ,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,MAAtC,SACK1B,EAAMC,cAGf,eAACwC,EAAA,EAAD,WAEQzC,EAAM0C,YACF,cAACR,EAAA,EAAD,CAAQT,QAAQ,YAAYU,KAAK,QAAQrC,QAAS,SAAAkC,GAAC,OAAIhC,EAAM2C,SAAS3C,EAAM4B,KAA5E,2BACA,GAGJ5B,EAAM4C,WACF,cAACV,EAAA,EAAD,CAAQT,QAAQ,YAAYU,KAAK,QAAQrC,QAAS,SAAAkC,GAAC,OAAIhC,EAAM6C,QAAQ7C,EAAM4B,KAA3E,sBACA,GAER,cAACM,EAAA,EAAD,CAAQT,QAAQ,YAAYU,KAAK,QAAQrC,QAAS,SAAAkC,GAAC,OAAIhC,EAAM8C,OAAO9C,EAAM4B,KAA1E,0BC1DDmB,MAbf,SAAwBC,EAAcC,GAAM,IAAD,EACbnE,IAAMmC,UAAS,WACrC,IAAMiC,EAAcC,OAAO1D,aAAa2D,QAAQH,GAChD,OAAuB,OAAhBC,EACDG,KAAKC,MAAMJ,GACXF,KAL6B,mBAChClB,EADgC,KACzByB,EADyB,KAUvC,OAHAzE,IAAM0E,WAAU,WACZL,OAAO1D,aAAagE,QAAQR,EAAKI,KAAKK,UAAU5B,MACjD,CAACmB,EAAKnB,IACF,CAACA,EAAOyB,I,2BCFbI,EAAe,CAACC,IAAK,GAAIjD,MAAO,GAAIkD,OAAQ,IAEnC,SAASC,IAAuB,IAAD,EACN7C,mBAAS,IADH,mBACnC8C,EADmC,KACvBC,EADuB,OAEQjB,EAAe,GAAI,oBAF3B,mBAEnCkB,EAFmC,KAEhBC,EAFgB,KAI1CV,qBAAU,WACNW,MACD,IAEH,IAAMA,EAAa,uCAAG,4BAAA5E,EAAA,sEACe6E,IAAMC,IAAI,mBADzB,OACZC,EADY,OAGlBN,EAAcM,EAAmBC,MAHf,2CAAH,qDAMbC,EAAmB,uCAAG,WAAO5C,GAAP,SAAArC,EAAA,sDACxB4D,OAAOvD,SAAP,qBAAgCgC,GADR,2CAAH,sDAInB6C,EAAgB,uCAAG,WAAO7C,GAAP,iBAAArC,EAAA,yDAGG,KADpBmF,EAAYX,EAAWY,QAAO,SAAAC,GAAE,OAAIA,EAAGhD,KAAOA,MACrCiD,OAHQ,kDAKjBlB,EAAemB,IAAEC,UAAUL,EAAU,KAC5B9C,GAAK,eAClB+B,EAAaqB,SAAWpD,EAExBsC,EAAqB,GAAD,mBAAKD,GAAL,CAAwBN,KATvB,2CAAH,sDAYhBsB,EAAwB,uCAAG,WAAOrD,GAAP,eAAArC,EAAA,yDAEL,KADpB2F,EAAmBjB,EAAkBU,QAAO,SAAAC,GAAE,OAAIA,EAAGI,WAAapD,MADzC,iDAK7BuB,OAAOvD,SAAP,qBAAgCsF,EAAiB,GAAGtD,IALvB,2CAAH,sDAQxBuD,EAAkB,uCAAG,sBAAA5F,EAAA,sDACvByE,EAAc,CAAC,eAAIL,IAAN,mBAAwBI,KADd,2CAAH,qDAIlB3B,EAAa,uCAAG,WAAMsC,GAAN,SAAAnF,EAAA,sEACa6E,IAAMgB,KAAK,mBAAoBV,GAD5C,yDAAH,sDAIblC,EAAe,uCAAG,WAAM6C,GAAN,SAAA9F,EAAA,sEACU6E,IAAMkB,OAAO,mBAAqBD,GAD5C,cAEpBlB,IAFoB,2CAAH,sDAKrB,OACI,qCACI,cAACoB,EAAA,EAAD,CAAMC,WAAS,EAAf,SACI,cAACD,EAAA,EAAD,CAAME,MAAI,EAAV,SACI,cAACvD,EAAA,EAAD,CAAQT,QAAQ,YAAYU,KAAK,QAAQrC,QAAS,SAAAkC,GAAC,OAAImD,KAAvD,+BAGR,cAACpF,EAAD,UAEQgE,EAAW2B,KAAI,SAAAhB,GACX,OAAQ,cAACxE,EAAD,UACJ,cAACa,EAAD,CACIJ,MAAO+D,EAAU/D,MACjBkC,QAAS4B,EACT3B,OAAQ0B,EACR7B,SAAUsC,EACVzC,gBAAiBA,EACjBE,YAAauB,EAAkB0B,MAAK,SAAAf,GAAE,OAAIA,EAAGI,WAAaN,EAAU9C,IAAMgD,EAAGI,WAAaN,EAAUd,OACpGhB,WAAY8B,EAAUb,OAAOgB,OAAS,EACtCjD,GAAI8C,EAAUd,IAEdxB,cAAe,SAACzB,GAAD,OAAWyB,EAAc,2BAAIsC,GAAL,IAAgB/D,YAV3D,SAYI,cAACZ,EAAD,UAEQ2E,EAAUb,OAAO6B,KAAI,SAACE,EAAOC,GACzB,KAAGA,EAAQ,GAEX,OAAQ,cAAC3F,EAAD,UAAiC0F,EAAMjF,OAAvC,eAAuBkF,UARtCnB,EAAUd,MAVAc,EAAUd,IAAM,cClE/D,IASekC,EATE,SAAC9F,GAEjB,OACC,qBAAKxB,UAAU,YAAf,SACC,cAACsF,EAAD,O,6HCGGiC,EAAMC,IAASD,MAAME,SAAS,SAE9BC,EAAe,CACjBC,QAAS,CACLC,IACAC,IACAC,IACAC,KAEJC,WAAY,CACR,CAAEC,MAAO,QAASC,WAAY,SAAUC,aAAc,uBACtD,CAAEF,MAAO,QAASC,WAAY,OAAQE,MAAM,IAEhDC,cAAe,CACXC,KAAM,EACNC,UAAU,GAEdC,YAAarH,SAASsH,cAAc,QACpCC,yBAA0B,CACtBC,kBAAmB,CACfX,WAAY,CACR,CACIC,MAAO,cACPC,WAAY,eACZU,YAAa,iBACbC,SAAU,KAKd,CACIZ,MAAO,kBACPC,WAAY,sBACZU,YAAa,iBACbC,SAAU,KAGd,CACIZ,MAAO,SACPC,WAAY,SACZU,YAAa,iBACbC,SAAU,KAKd,CACIZ,MAAO,aACPC,WAAY,gBACZU,YAAa,iBACbC,SAAU,KAEd,CACIZ,MAAO,WACPC,WAAY,UACZU,YAAa,iBACbC,SAAU,KAKd,CACIZ,MAAO,eACPC,WAAY,gBACZU,YAAa,iBACbC,SAAU,KAKd,CACIZ,MAAO,iBACPC,WAAY,kBACZU,YAAa,iBACbC,SAAU,KAEd,CACIZ,MAAO,cACPC,WAAY,eACZU,YAAa,iBACbC,SAAU,KAEd,CACIZ,MAAO,SACPC,WAAY,QACZW,SAAU,KAGd,CACIZ,MAAO,OACPC,WAAY,SACZW,SAAU,IACVC,UAAU,EACVC,SAAS,GAGb,CACId,MAAO,cACPC,WAAY,wBACZpG,SAAU,MAGlBkH,YAAa,SAAAC,GAETA,EAAOC,UAAUC,iBAAiB,CAC9BC,MAAO,CACH,CACIC,MAAO,OACPC,KAAM,QAGdC,aAAc,CAACD,KAAM,SAG7BE,UAAW,CAAC,CAACvB,MAAO,OAAQqB,KAAM,QAClCG,2BAA4B,SAAC1I,EAAE2I,GAAH,OAAS3I,EAAE4I,KAAOD,EAAEC,MAChDtB,cAAe,CACXC,KAAM,EACNC,UAAU,EACVqB,WAAW,GAEfC,aAAc,IACdC,aAAc,SAAAC,GACV,OAAOA,EAAI3E,KAEf4E,oBAAqB,SAACf,KACtBgB,mBAAoB,SAAChB,KACrBiB,+BAA+B,EAE/BC,aAAa,GAGjBC,iBAAkB,SAAUnB,GACxBA,EAAOoB,gBAAgBpB,EAAOlD,KAAKuE,SAG3CC,QAAS,CACL,CACInF,IAAK,EACLjD,MAAO,UACPqI,MAAO,EACPF,MAAO,CACH,CACIlF,IAAK,EACLqF,YAAa,KACbC,gBAAiBnD,EACjBoD,OAAQ,KACRC,WAAYrD,EACZsD,SAAU,KACVC,aAAcvD,EACdwD,eAAgB,QAChBC,YAAa,QACbC,OAAQ,KACRtB,KAAM,EACNuB,YAAa,2BAEjB,CACI9F,IAAK,EACLqF,YAAa,GACbC,gBAAiB,GACjBC,OAAQ,KACRC,WAAYrD,EACZsD,SAAU,KACVC,aAAcvD,EACdwD,eAAgB,QAChBC,YAAa,QACbC,OAAQ,KACRtB,KAAM,EACNuB,YAAa,2BAEjB,CACI9F,IAAK,EACLqF,YAAa,GACbC,gBAAiB,GACjBC,OAAQ,KACRC,WAAYrD,EACZsD,SAAU,KACVC,aAAcvD,EACdwD,eAAgB,QAChBC,YAAa,QACbC,OAAQ,KACRtB,KAAM,EACNuB,YAAa,+BAoRlBC,EA7QK,SAAA3J,GAAU,IAAD,EACDiB,mBAAS,IADR,mBAClBsD,EADkB,KACZqF,EADY,KAEnBC,EAAUC,iBAAO,IACjBC,EAAgBD,iBAAO,IACvBE,EAAaF,kBAAO,GAE1BtG,qBAAW,WAEP,IAAIuF,EAAU7C,EAAa6C,QAI3BA,EAAQkB,SAAQ,SAAArE,GACbA,EAAMkD,MAAMmB,SAAQ,SAAAC,GAAI,OAAIA,EAAKC,QAAUvE,EAAMhC,UAIpDgG,EAAQb,KACT,IAEH,IAcMP,EAAsB,SAACf,GA8EzB,MA7Ee,CACX,CACI7I,KAAM,SACNwL,OAAQ,WAEJ,IAAI7B,EAAMd,EAAO4C,KAAK9F,KAClB+F,EAAO,GAOX,GANA7C,EAAO8C,IAAIC,aAAa,SAACH,GAAD,OAAUC,EAAKG,KAAKJ,EAAK9F,SAEjDmG,QAAQC,IAAI,SAAUL,GAInB/B,EAAIO,MACP,CACI,IAAI8B,EAAc,CAACC,EAAetC,EAAIS,MAAQ,IAC1C8B,EAAiBR,EAAK3F,QAAO,SAAAiB,GAAK,OAAIA,EAAMoD,MAAQT,EAAIS,SAC5D8B,EAAeb,SAAQ,SAAArE,GAAK,OAAIA,EAAMoD,WAEtCY,EAAQU,EAAKS,OAAOH,IAEpBnD,EAAO8C,IAAIS,iBAAiB,CACxBC,IAAKL,EACL9H,OAAQgI,IAIZrD,EAAOC,UAAUC,iBAAiB,CAC9BC,MAAO,CACH,CACIC,MAAO,QACPC,KAAM,QAGdC,aAAc,CAACD,KAAM,YAK7B,CAEI,IAAIlC,EAAQrB,EAAKoB,MAAK,SAAAC,GAAK,OAAIA,EAAMhC,MAAQ2E,EAAI4B,WAG7Ce,EAAUC,EAAc5C,EAAI4B,QAAS5B,EAAIJ,KAAO,GAEpD+C,EAAQf,QAAUvE,EAAMhC,IACxB,IAAIwH,EAAa,CAACF,GAGdG,EAAgBzF,EAAMkD,MAAMnE,QAAO,SAAAuF,GAAI,OAAIA,EAAK/B,KAAOI,EAAIJ,QAC/DkD,EAAcpB,SAAQ,SAAAC,GAAI,OAAIA,EAAK/B,UAEnCvC,EAAMkD,MAAQlD,EAAMkD,MAAMiC,OAAOK,GAGjC3D,EAAO8C,IAAIS,iBAAiB,CACxBC,IAAKG,EACLtI,OAAQuI,IAIZ5D,EAAOC,UAAUC,iBAAiB,CAC9BC,MAAO,CACH,CACIC,MAAO,OACPC,KAAM,QAGdC,aAAc,CAACD,KAAM,UAKjCwD,WAAY,CAAC,UAAW,WAM9BT,EAAiB,SAAC7B,GACpB,IAAIpH,EAAK2J,cACT,MAAO,CACH5K,MAAO,+CACPmI,MAAO,CAACqC,EAAcvJ,EAAI,IAC1BoH,QACApF,IAAKhC,IAQPuJ,EAAgB,SAAChB,EAAShC,EAAMxH,GACzBqF,IAASD,MAAME,SAAS,SACjC,MAAO,CACHgD,YAAa,GACbC,gBAAiB,GACjBC,OAAQ,GACRC,WAAY,GACZC,SAAU,GACVC,aAAc,GACdC,eAAgB,GAChBC,YAAa,GACbC,OAAQ,GACRtB,KAAMA,EACNgC,QAASA,EACTvG,IAAK2H,cACL7B,YAAa/I,GAAS,oEA6F9B,OAzFAuF,EAAagB,yBAAyBC,kBAAkBqB,oBAAsBA,EAC9EtC,EAAagB,yBAAyBC,kBAAkBqE,cAAgB,SAAClM,GACrE,IAAIyJ,EAAU,GACdzJ,EAAMiL,IAAIC,aAAY,SAAAH,GAAI,OAAItB,EAAQ0B,KAAKJ,MAC3C,IAAMoB,EAAanM,EAAM+K,KACnBqB,EAAWpM,EAAMoM,SACjBC,EAAiBF,IAAeC,EAEtC,GADAhB,QAAQC,IAAI,yBAA0BrL,GAClCqM,EAAgB,CAChB,IAAMC,EAAaH,EAAWlH,KACxBsH,EAAWH,EAASnH,KACpBuH,EAAY/C,EAAQgD,QAAQH,GAC5BI,EAAUjD,EAAQgD,QAAQF,GAC1BI,EAAWlD,EAAQmD,SAM7B,SAAqBC,EAAKL,EAAWE,GACjC,IAAMI,EAAUD,EAAIL,GACpBK,EAAIE,OAAOP,EAAW,GACtBK,EAAIE,OAAOL,EAAS,EAAGI,GARvBE,CAAYL,EAAUH,EAAWE,GACjCpC,EAAQqC,GACR3M,EAAMiL,IAAIgC,WAAWN,GACrB3M,EAAMiL,IAAIiC,qBAQlBtG,EAAagB,yBAAyBC,kBAAkBsF,cAAgB,WACpE,IAAMzE,EAAY6B,EAAQ6C,QAAQC,eAClC3C,EAAW0C,QAAU1E,GAAaA,EAAUnD,OAAS,EACrD,IAAM+H,EAAkB5C,EACxBU,QAAQC,IACJ,gBACAX,EACA,oBACA4C,GAEJ/C,EAAQ6C,QAAQG,mBAAmBD,IAGvC1G,EAAagB,yBAAyBC,kBAAkBsB,mBAAqB,SAAChB,GAG1E,GAFAiD,QAAQC,IAAI,qBAAsBlD,GAEP,SAAxBA,EAAOqF,OAAOrG,MACjB,CACI,IAAIsG,EAAStF,EAAO3F,MAChBkL,EAASvF,EAAOwF,SAChBC,EAAW,GACfzF,EAAO8C,IAAIC,aAAa,SAACH,GAAD,OAAU6C,EAASzC,KAAKJ,EAAK9F,SAGlDwI,EAASC,GACLD,EAASG,EAASrI,SACjBkI,EAASG,EAASrI,QAEtBqI,EAASjD,SAAQ,SAAAkD,GACTA,EAAQhF,KAAO6E,GAAUG,EAAQhF,MAAQ4E,GACzCI,EAAQhF,WAGZ6E,EAASD,IACVA,EAAS,IACRA,EAAS,GACbG,EAASjD,SAAQ,SAAAkD,GACTA,EAAQhF,KAAO6E,GAAUG,EAAQhF,MAAQ4E,GACzCI,EAAQhF,WAKpB,IAAII,EAAMd,EAAO4C,KAAK9F,KACtBgE,EAAIJ,KAAO4E,EACXG,EAASzC,KAAKlC,GAEdd,EAAO8C,IAAIS,iBAAiB,CACxBlI,OAAQoK,IAIZzF,EAAOC,UAAUC,iBAAiB,CAC9BC,MAAO,CACH,CACIC,MAAO,OACPC,KAAM,QAGdC,aAAc,CAACD,KAAM,UAM7B,qBAAKxF,MAAO,CAAE8K,MAAO,OAAQC,OAAQ,qBAArC,SACI,qBACIzL,GAAG,SACHU,MAAO,CACH+K,OAAQ,OACRD,MAAO,QAEX5O,UAAU,kBANd,SAQI,cAAC,cAAD,CACI2H,QAASD,EAAaC,QACtBK,WAAYN,EAAaM,WACzBK,cAAeX,EAAaW,cAC5ByG,cAAc,EACd5E,+BAA+B,EAG/BV,UAAW,CAAC,CAACvB,MAAO,QAASqB,KAAM,QACnCQ,aAnIK,SAACC,GAClB,OAAOA,EAAI3E,KAmICoD,YAAad,EAAac,YAC1BE,yBAA0BhB,EAAagB,yBACvCsB,oBAAqBA,EACrBhB,YAhPI,SAACC,GACjBoC,EAAQ6C,QAAUjF,EAAO8C,IACzB9C,EAAOC,UAAUC,iBAAiB,CAC9BC,MAAO,CACH,CACIC,MAAO,QACPC,KAAM,QAGdC,aAAc,CAACD,KAAM,QAEzBiC,EAAc2C,QAAUjF,EAAOC,WAuOnBqB,QAASxE,SCtYdgJ,EA7DD,SAAC,GAA0C,IAAD,IAAvCC,sBAAuC,MAAtB,GAAsB,MAAlB3J,cAAkB,MAAT,GAAS,EAOpDL,qBAAW,WACbkH,QAAQC,IAAI,WAAY6C,GACxB9C,QAAQC,IAAI,SAAU9G,KACjB,IAQH,OACF,cAAC,EAAD,K,SC3BI2J,G,OAAiB,CACtB,CAAE3L,MAAO,oBAAqBC,MAAO,cAAeQ,MAAO,CAAC5B,UAAW,kBACvE,CAAEmB,MAAO,sBAAuBC,MAAO,kBAAmBQ,MAAO,CAAC5B,UAAW,kBAC7E,CAAEmB,MAAO,cAAeC,MAAO,SAAUQ,MAAO,CAAC5B,UAAW,kBAC5D,CAAEmB,MAAO,gBAAiBC,MAAO,aAAcQ,MAAO,CAAC5B,UAAW,kBAClE,CAAEmB,MAAO,cAAeC,MAAO,UAAWQ,MAAO,CAAC5B,UAAW,kBAC7D,CAAEmB,MAAO,gBAAiBC,MAAO,cAAeQ,MAAO,CAAC5B,UAAW,kBACnE,CAAEmB,MAAO,kBAAmBC,MAAO,cAAeQ,MAAO,CAAC5B,UAAW,kBACrE,CAAEmB,MAAO,eAAgBC,MAAO,WAAYQ,MAAO,CAAC5B,UAAW,kBAC/D,CAAEmB,MAAO,SAAUC,MAAO,QAC1B,CAAED,MAAO,uBAAwBC,MAAO,cAAeQ,MAAO,CAAChC,SAAU,YAGpEyF,EAAMC,WAASD,MAAME,SAAS,SAE9BvB,GAAY,CACjBb,OAAQ,CACL,CACClD,MAAO,UACPmI,MAAO,CACN,CACCG,YAAa,GACbC,gBAAiB,GACjBC,OAAQ,KACRC,WAAYrD,EACZsD,SAAU,KACVC,aAAcvD,EACd0H,YAAa,QACbzI,SAAU,QACVmD,KAAM,EACNuB,YAAa,2BAEd,CACCT,YAAa,GACbC,gBAAiB,GACjBC,OAAQ,KACRC,WAAYrD,EACZsD,SAAU,KACVC,aAAcvD,EACd0H,YAAa,QACbzI,SAAU,QACVmD,KAAM,EACNuB,YAAa,6CAEd,CACCT,YAAa,GACbC,gBAAiB,GACjBC,OAAQ,KACRC,WAAYrD,EACZsD,SAAU,KACVC,aAAcvD,EACd0H,YAAa,QACbzI,SAAU,QACVmD,KAAM,EACNuB,YAAa,qEAIhB,CACC/I,MAAO,UACPmI,MAAO,CACN,CACCG,YAAa,GACbC,gBAAiB,GACjBC,OAAQ,KACRC,WAAYrD,EACZsD,SAAU,KACVC,aAAcvD,EACd0H,YAAa,QACbzI,SAAU,QACVmD,KAAM,EACNuB,YAAa,qCAEd,CACCT,YAAa,GACbC,gBAAiB,GACjBC,OAAQ,KACRC,WAAYrD,EACZsD,SAAU,KACVC,aAAcvD,EACd0H,YAAa,QACbzI,SAAU,QACVmD,KAAM,EACNuB,YAAa,iDAIhB,CACC/I,MAAO,UACPmI,MAAO,CACN,CACCG,YAAa,GACbC,gBAAiB,GACjBC,OAAQ,KACRC,WAAYrD,EACZsD,SAAU,KACVC,aAAcvD,EACd0H,YAAa,QACbzI,SAAU,QACVmD,KAAM,EACNuB,YAAa,eAEd,CACCT,YAAa,GACbC,gBAAiB,GACjBC,OAAQ,KACRC,WAAYrD,EACZsD,SAAU,KACVC,aAAcvD,EACd0H,YAAa,QACbzI,SAAU,QACVmD,KAAM,EACNuB,YAAa,WAEd,CACCT,YAAa,GACbC,gBAAiB,GACjBC,OAAQ,KACRC,WAAYrD,EACZsD,SAAU,KACVC,aAAcvD,EACd0H,YAAa,QACbzI,SAAU,QACVmD,KAAM,EACNuB,YAAa,uFAkCLgE,GAtBG,SAAC,GAA8B,EAA5BrI,YAA4B,+BAa7C,OANA7B,qBAAW,cAER,IAKL,sBAAKlB,MAAQ,CAAC+K,OAAQ,QAAtB,UACC,2CACA,cAAC,EAAD,CAAOG,eAAgBA,EAAgB3J,OAAQa,GAAUb,aC/I7C,QACb8J,UAdF,SAAmBC,GACjB,OAAOxJ,IAAMgB,KAAK,mBAAmBwI,IAcrCC,WAXF,SAAoBC,GAChB,OAAO1J,IAAMgB,KAAK,cAAc0I,IAWlCC,WARF,SAAoBnM,EAAIkM,GAGpB,OAFFpD,QAAQC,IAAI,iBAAiB/I,GAC7B8I,QAAQC,IAAI,aAAamD,GAChB1J,IAAM4J,IAAN,qBAAwBpM,GAAKkM,KCTxC,SAASG,GAASjO,GACd,IAAMkO,EAAQpE,mBACRqE,EAAWrE,mBACXsE,EAAYtE,mBACZuE,EAAUvE,mBACVwE,EAAWxE,mBACXyE,EAAUzE,mBACV0E,EAAiB1E,mBAEf9K,GADU8K,mBACD1K,qBAAWP,GAApBG,MAEFyP,EAAY,uCAAG,WAAOnP,GAAP,iBAAAC,EAAA,yDACjBD,EAAME,iBAMF+O,EAAQ7B,QAAQ5K,QAAU0M,EAAe9B,QAAQ5K,MAPpC,gBAQb4M,MAAM,2BARO,8BAUPZ,EAAW,GACdK,EAASzB,QAAQ5K,QAChBgM,EAASa,UAAYR,EAASzB,QAAQ5K,OAEvCsM,EAAU1B,QAAQ5K,QACjBgM,EAASc,WAAaR,EAAU1B,QAAQ5K,OAEzCuM,EAAQ3B,QAAQ5K,QACfgM,EAASe,SAAWR,EAAQ3B,QAAQ5K,OAErCwM,EAAS5B,QAAQ5K,QAChBgM,EAASgB,MAAQR,EAAS5B,QAAQ5K,OAEnCyM,EAAQ7B,QAAQ5K,QACfgM,EAASiB,SAAWR,EAAQ7B,QAAQ5K,OAxB3B,UA2BUkN,GAAIjB,WAAWG,EAAMxB,QAAQ5K,MAChDgM,GA5BS,QA2BPmB,EA3BO,OA8BbvE,QAAQC,IAAI,YAAasE,GACrBA,EAASC,GACTvP,SAASC,SAASC,QAAlB,iBAAoCoP,EAAS1K,KAAK3C,KAElD8M,MAAMO,EAASE,YAlCN,4CAAH,sDAuClB,OACI,0BAAS3Q,UAAU,WAAnB,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAIA,UAAU,kBAAkBoD,GAAG,iBAAnC,kBAA0D5C,EAAK2P,eAEnE,uBAAMnQ,UAAU,iBAAiBoD,GAAG,WAAWwN,SAAUX,EAAzD,UACI,sBAAKjQ,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAeoD,GAAG,iBAAjC,yBACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,OAAOzN,GAAG,iBAAiB0N,IAAKnB,EAAUoB,YAAavQ,EAAK2P,eAEzG,sBAAKnQ,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAeoD,GAAG,kBAAjC,0BACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,OAAOzN,GAAG,kBAAkB0N,IAAKlB,EAAWmB,YAAavQ,EAAK4P,gBAE3G,sBAAKpQ,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAeoD,GAAG,gBAAjC,wBACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,OAAOzN,GAAG,gBAAgB0N,IAAKjB,EAASkB,YAAavQ,EAAK6P,cACjG,sBAAKrQ,UAAU,MAAf,UACF,qBAAKA,UAAU,eAAeoD,GAAG,aAAjC,oBACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,QAAQzN,GAAG,aAAa0N,IAAKhB,EAAUiB,YAAavQ,EAAK8P,WAEtG,sBAAKtQ,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAeoD,GAAG,gBAAjC,2BACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,WAAWzN,GAAG,gBAAgB0N,IAAKf,OAEhF,sBAAK/P,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAeoD,GAAG,eAAjC,mCACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,WAAWzN,GAAG,mBAAmB0N,IAAKd,OAEnF,sBAAKhQ,UAAU,MAAf,UACI,uBAAO6Q,KAAK,SAASzN,GAAG,UAAU0N,IAAKpB,EAAOpM,MAAO9C,EAAK4E,MAC1D,wBAAQpF,UAAU,mCAAmC6Q,KAAK,SAASzN,GAAG,aAAtE,kCCjFpB,SAAS4N,GAAQxP,GAAQ,IACbhB,EAAUI,qBAAWP,GAArBG,KACR,OACI,0BAASR,UAAU,YAAnB,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,2CAAcQ,EAAK2P,UAAnB,WAGR,sBAAKnQ,UAAU,MAAf,UAEI,yBAASA,UAAU,kCAGnB,cAACyP,GAAD,UCdhB,SAASwB,GAAMzP,GACX,IAAMsO,EAAWxE,mBACXyE,EAAUzE,mBACV3K,EAAcC,qBAAWP,GAEzB6Q,EAAW,uCAAG,WAAOpQ,GAAP,SAAAC,EAAA,yDAChBD,EAAME,kBAMF8O,EAAS5B,QAAQ5K,QAASyM,EAAQ7B,QAAQ5K,MAP9B,gCAQNkN,GAAIrB,UACN,CACI,MAASW,EAAS5B,QAAQ5K,MAC1B,SAAYyM,EAAQ7B,QAAQ5K,QAG/B6N,MAAK,SAACC,GACHzQ,EAAYF,QAAQ2Q,EAAIrL,MACxB9E,aAAagE,QAAQ,OAAQJ,KAAKK,UAAUkM,EAAIrL,UAEnDoL,MAAK,WACFhQ,SAASC,SAASC,QAAQ,cAE7BgQ,OAAM,SAACC,GACJpF,QAAQC,IAAI,sBAAsBmF,GAClCpB,MAAMoB,MAvBF,2CAAH,sDA4BjB,OACI,0BAAStR,UAAU,wBAAnB,UACI,qBAAKA,UAAU,MAAf,SACI,oBAAIA,UAAU,MAAMoD,GAAG,cAAvB,qBAEJ,uBAAMpD,UAAU,kBAAkBoD,GAAG,YAAYwN,SAAUM,EAA3D,UACI,sBAAKlR,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAeoD,GAAG,aAAjC,oBACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,QAAQzN,GAAG,cAAc0N,IAAKhB,OAE3E,sBAAK9P,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAeoD,GAAG,gBAAjC,uBACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,WAAWzN,GAAG,iBAAiB0N,IAAKf,OAEjF,wBAAQ/P,UAAU,sBAAsB6Q,KAAK,SAASzN,GAAG,QAAzD,sBAEJ,qBAAKpD,UAAU,MAAf,SACI,2CAAa,mBAAGC,KAAK,gBAAgBmD,GAAG,SAA3B,qCCnD7B,SAASmO,GAAO/P,GACZ,IAAMmO,EAAWrE,mBACXsE,EAAYtE,mBACZuE,EAAUvE,mBACVwE,EAAWxE,mBACXyE,EAAUzE,mBACV0E,EAAiB1E,mBAEjBkG,EAAY,uCAAG,WAAO1Q,GAAP,eAAAC,EAAA,yDACjBD,EAAME,iBAMF+O,EAAQ7B,QAAQ5K,QAAU0M,EAAe9B,QAAQ5K,MAPpC,gBAQb4M,MAAM,2BARO,4BASNP,EAASzB,QAAQ5K,OAASwM,EAAS5B,QAAQ5K,OAASyM,EAAQ7B,QAAQ5K,OAAS0M,EAAe9B,QAAQ5K,OAT9F,iCAUUkN,GAAInB,WACvB,CACI,UAAaM,EAASzB,QAAQ5K,MAC9B,WAAcsM,EAAU1B,QAAQ5K,MAChC,SAAYuM,EAAQ3B,QAAQ5K,MAC5B,MAASwM,EAAS5B,QAAQ5K,MAC1B,SAAYyM,EAAQ7B,QAAQ5K,MAC5B,QAAU,EACV,MAAS,KAlBJ,OAUPmN,EAVO,OAqBbvE,QAAQC,IAAI,YAAasE,GACrBA,EAASC,GACTvP,SAASC,SAASC,QAAQ,KAE1B6O,MAAMO,EAASE,YAzBN,4CAAH,sDA8BlB,OACI,0BAAS3Q,UAAU,wBAAnB,UACI,qBAAKA,UAAU,MAAf,SACI,oBAAIA,UAAU,MAAMoD,GAAG,eAAvB,sBAEJ,uBAAMpD,UAAU,mBAAmBoD,GAAG,aAAawN,SAAUY,EAA7D,UACI,sBAAKxR,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAeoD,GAAG,iBAAjC,yBACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,OAAOzN,GAAG,mBAAmB0N,IAAKnB,OAE/E,sBAAK3P,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAeoD,GAAG,kBAAjC,0BACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,OAAOzN,GAAG,oBAAoB0N,IAAKlB,OAEhF,sBAAK5P,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAeoD,GAAG,gBAAjC,wBACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,OAAOzN,GAAG,kBAAkB0N,IAAKjB,OAE9E,sBAAK7P,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAeoD,GAAG,aAAjC,oBACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,QAAQzN,GAAG,eAAe0N,IAAKhB,OAE5E,sBAAK9P,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAeoD,GAAG,gBAAjC,uBACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,WAAWzN,GAAG,kBAAkB0N,IAAKf,OAElF,sBAAK/P,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAeoD,GAAG,eAAjC,+BACA,uBAAOpD,UAAU,mBAAmB6Q,KAAK,WAAWzN,GAAG,mBAAmB0N,IAAKd,OAEnF,wBAAQhQ,UAAU,sBAAsB6Q,KAAK,SAASzN,GAAG,SAAzD,wBAEJ,qBAAKpD,UAAU,MAAf,SACI,mDAAqB,mBAAGC,KAAK,eAAemD,GAAG,QAA1B,mCCxErC,SAASqO,KACL,IAAMC,EAAa,CACfC,KAAM,cAAe,IAAIC,MAAOC,eAFvB,MASuBtS,sBAJpC,SAAsBuS,EAAerS,GACjC,OAAO,2BAAIqS,GAAX,IAA0BrS,aAG+BiS,GAThD,mBASNK,EATM,UAWb,OACI,wBAAQ/R,UAAU,6CAAlB,SACI,yBAASA,UAAU,MAAnB,SACI,sBAAKA,UAAU,kBAAf,UAAiC,mBAAGA,UAAU,qBAA9C,IAAuE+R,EAAWJ,YC6CnFK,OAhDf,WAAgB,IAAD,EAEWvP,mBAAS,IAFpB,mBAENjC,EAFM,KAEAC,EAFA,KAQb,OAJAuE,qBAAU,WACRvE,EAAQoE,KAAKC,MAAM7D,aAAa2D,QAAQ,YACvC,IAGD,eAACvE,EAAY4R,SAAb,CAAsB3O,MAAO,CAAE9C,OAAMC,WAArC,UACE,cAACnB,EAAD,IACA,eAAC,IAAD,WACE,sBAAK8D,GAAG,MAAR,UACE,cAAC,EAAD,IACA,qBAAKpD,UAAW,kBAAhB,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOkS,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,iBAAlB,SACE,cAAC,GAAD,MAIF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAClB,GAAD,MAEF,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,iBAAlB,SACE,cAACZ,GAAD,MAEF,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,UAAlB,SACE,cAACnB,GAAD,MAEF,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,eAIlB,cAAC,IAAD,YA3BR,OAgCA,cAACV,GAAD,QC5CSW,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,qBCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF3R,SAAS4R,eAAe,SAM1BX,O","file":"static/js/main.3d33f905.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\n\nfunction Header(){\n    const initHeader = {\n        heading: \"Universal Process Management\",\n        subHeading: \"Manage Millions on a Personal Level\",\n        logo: \"./logo.png\",\n        logoAlt: \"Logo\",\n        logoLink: \"/\"\n    };\n\n    function changeHeader(currentHeader, change){\n        return {...currentHeader, change};\n    }\n\n    const [headerData, setHeaderData] = useReducer(changeHeader, initHeader);\n\n    return (\n        <header className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col logo ml-0\">\n                    <a href={headerData.logoLink}>\n                        <img src={headerData.logo} alt={headerData.logoAlt}/>\n                        <span className=\"company-name text-company-primary text-wrap align-left\">{headerData.name}</span>\n                    </a>\n                </div>\n                <div className=\"col mr-0\">\n                    <span className=\"text-company-secondary align-right\">{headerData.subHeading}</span>\"\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport {\n    Header\n};","import React from \"react\";\r\n\r\nconst UserContext = React.createContext({\r\n  user: {},\r\n  setUser: ()=>{}\r\n});\r\n\r\nexport { \r\n  UserContext\r\n};\r\n","import React, {useContext} from \"react\";\r\nimport { UserContext } from \"../../utils/userContext\";\r\n\r\nfunction Nav() {\r\n  const userContext = useContext(UserContext);\r\n  \r\n  const handleLogout = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Animate button click\r\n    // await animateCSS('#login','bounce');\r\n\r\n    localStorage.removeItem(\"user\");\r\n    document.location.replace(\"/\");\r\n};\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand beta-menu navbar-dropdown align-items-center navbar-fixed-top navbar-toggleable-sm bg-dark text-white\">\r\n      <div className='icon-wrap align-right'></div>\r\n      <a className=\"navbar-brand text-white\" href=\"/\">\r\n        Home\r\n      </a>\r\n      {userContext.user ? (\r\n        <a className=\"navbar-brand text-white\" href=\"/Users/Logout\" onClick={handleLogout}>Logout</a>\r\n      ) : (\r\n        <a className=\"navbar-brand text-white\" href=\"/Users/Login\">Login</a>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\n\nexport default function List(props) {\n    return (\n        <ul className=\"list-group\">\n            {props.children}\n        </ul>\n    )\n}","import React from 'react';\n\nexport default function ListItem(props) {\n    return (\n        <li className=\"list-group-item\">\n            {props.children}\n        </li>\n    );\n}","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nexport default function ChecklistCard(props) {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    const [editingTitle, setEditingTitle] = useState(props.title ? false : true);\n    const [checklistTitle, setChecklistTitle] = useState(props.title);\n\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {\n                        editingTitle ?\n                            <>\n                                <TextField\n                                    id=\"outlined-basic\"\n                                    label=\"Checklist Title\"\n                                    variant=\"outlined\"\n                                    value={checklistTitle}\n                                    onChange={(e) => setChecklistTitle(e.currentTarget.value)}\n                                />\n                                <Button variant=\"contained\" size=\"small\" onClick={e => {\n                                    props.saveChecklist(checklistTitle);\n                                    setEditingTitle(false);\n                                }}>Save Title</Button>\n                            </> :\n                            <>\n                                {checklistTitle}\n                                <Button variant=\"contained\" size=\"small\" onClick={e => setEditingTitle(true)}>Edit Title</Button>\n                            </>\n                    }\n                    <Button variant=\"contained\" size=\"small\" color=\"secondary\" style={{float: 'right'}} onClick={e => props.deleteChecklist(props.id)}>Delete</Button>\n                </Typography>\n                <Typography variant=\"body2\" component=\"div\">\n                    {props.children}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                {\n                    props.canContinue ?\n                        <Button variant=\"contained\" size=\"small\" onClick={e => props.continue(props.id)}>Continue Last</Button> :\n                        ''\n                }\n                {\n                    props.canFillOut ?\n                        <Button variant=\"contained\" size=\"small\" onClick={e => props.fillOut(props.id)}>Fill out</Button> :\n                        ''\n                }\n                <Button variant=\"contained\" size=\"small\" onClick={e => props.update(props.id)}>Update</Button>\n            </CardActions>\n        </Card>\n    );\n}","import React from 'react';\n\nfunction useStickyState(defaultValue, key) {\n    const [value, setValue] = React.useState(() => {\n        const stickyValue = window.localStorage.getItem(key);\n        return stickyValue !== null\n            ? JSON.parse(stickyValue)\n            : defaultValue;\n    });\n    React.useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n    return [value, setValue];\n}\n\nexport default useStickyState;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport List from '../../components/List/List';\nimport ListItem from '../../components/List/ListItem';\nimport ChecklistCard from \"../../components/ChecklistCard/ChecklistCard\";\nimport useStickyState from \"../../utils/StickyState\";\nimport _ from 'lodash';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nconst newChecklist = {_id: '', title: '', phases: []}\n\nexport default function ChecklistManagement() {\n    const [checklists, setChecklists] = useState([]);\n    const [currentChecklists, setCurrentChecklists] = useStickyState([], 'currentChecklist')\n\n    useEffect(() => {\n        getChecklists();\n    }, []);\n\n    const getChecklists = async () => {\n        const checklistsResponse = await axios.get('/api/checklists');\n\n        setChecklists(checklistsResponse.data);\n    }\n\n    const goToUpdateChecklist = async (id) => {\n        window.location = `/checklist/${id}`;\n    }\n\n    const fillOutChecklist = async (id) => {\n        //If the user is filling out the checklist, copy it and send them to the page\n        let checklist = checklists.filter(ck => ck.id === id);\n        if(checklist.length === 0)\n            return;\n        let newChecklist = _.cloneDeep(checklist[0]);\n        newChecklist.id = 'newChecklist';\n        newChecklist.template = id;\n\n        setCurrentChecklists([...currentChecklists, newChecklist]);\n    }\n\n    const continueCurrentChecklist = async (id) => {\n        let currentChecklist = currentChecklists.filter(ck => ck.template === id);\n        if(currentChecklist === 0)\n            return;\n\n        window.location = `/checklist/${currentChecklist[0].id}`;\n    }\n\n    const createNewChecklist = async() => {\n        setChecklists([{...newChecklist}, ...checklists]);\n    }\n\n    const saveChecklist = async(checklist) => {\n        const updatedChecklist = await axios.post('/api/checklists/', checklist);\n    };\n\n    const deleteChecklist = async(checklistId) => {\n        const deleteChecklist = await axios.delete('/api/checklists/' + checklistId);\n        getChecklists();\n    }\n\n    return (\n        <>\n            <Grid container>\n                <Grid item>\n                    <Button variant=\"contained\" size=\"small\" onClick={e => createNewChecklist()}>New Checklist</Button>\n                </Grid>\n            </Grid>\n            <List>\n                {\n                    checklists.map(checklist => {\n                        return (<ListItem key={checklist._id + 'li'}>\n                            <ChecklistCard\n                                title={checklist.title}\n                                fillOut={fillOutChecklist}\n                                update={goToUpdateChecklist}\n                                continue={continueCurrentChecklist}\n                                deleteChecklist={deleteChecklist}\n                                canContinue={currentChecklists.find(ck => ck.template === checklist.id || ck.template === checklist._id)}\n                                canFillOut={checklist.phases.length > 0}\n                                id={checklist._id}\n                                key={checklist._id}\n                                saveChecklist={(title) => saveChecklist({...checklist, title})}\n                            >\n                                <List>\n                                    {\n                                        checklist.phases.map((phase, index) => {\n                                            if(index > 2)\n                                                return;\n                                            return (<ListItem key={`phase${index}`}>{phase.title}</ListItem>)\n                                        })\n                                    }\n                                </List>\n                            </ChecklistCard>\n                        </ListItem>)\n                    })\n                }\n            </List>\n        </>\n    )\n}\n\n","import React from 'react';\nimport './Homepage.css';\nimport ChecklistManagement from \"../ChecklistManagment/ChecklistManagement\";\n\n/**\n * Talk about what this app allows you to do\n */\nconst Homepage = (props) => {\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<ChecklistManagement/>\n\t\t</div>\n\t)\n}\n\nexport default Homepage;","'use strict';\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { AgGridReact } from '@ag-grid-community/react';\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport { MasterDetailModule } from '@ag-grid-enterprise/master-detail';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { ColumnsToolPanelModule } from '@ag-grid-enterprise/column-tool-panel';\nimport '@ag-grid-community/core/dist/styles/ag-grid.css';\nimport '@ag-grid-community/core/dist/styles/ag-theme-alpine.css';\nimport './AgGrid.scss';\nimport DateTime from \"luxon/src/datetime\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst now = DateTime.now().toFormat('MM/dd');\n\nconst initialState = {\n    modules: [\n        ClientSideRowModelModule,\n        MasterDetailModule,\n        MenuModule,\n        ColumnsToolPanelModule,\n    ],\n    columnDefs: [\n        { field: 'title', headerName: 'Phases', cellRenderer: 'agGroupCellRenderer' },\n        { field: 'order', headerName: 'Line', hide: true },\n    ],\n    defaultColDef: {\n        flex: 1,\n        editable: true,\n    },\n    popupParent: document.querySelector('body'),\n    detailCellRendererParams: {\n        detailGridOptions: {\n            columnDefs: [\n                {\n                    field: 'finalReview',\n                    headerName: 'Final Review',\n                    headerClass: 'rotated-header',\n                    maxWidth: 100,\n                    // cellClass: 'initial-cell',\n                    // minWidth: 100,\n                    // maxHeight: 100,\n                },\n                {\n                    field: 'finalReviewDate',\n                    headerName: 'Final Reviewed Date',\n                    headerClass: 'rotated-header',\n                    maxWidth: 100,\n                    // headerClass: 'rotated-text'\n                },\n                {\n                    field: 'review',\n                    headerName: 'Review',\n                    headerClass: 'rotated-header',\n                    maxWidth: 100,\n                    // cellClass: 'initial-cell',\n                    // minWidth: 100\n                    // maxWidth: 50,\n                },\n                {\n                    field: 'reviewDate',\n                    headerName: 'Reviewed Date',\n                    headerClass: 'rotated-header',\n                    maxWidth: 100,\n                },\n                {\n                    field: 'prepared',\n                    headerName: 'Prepare',\n                    headerClass: 'rotated-header',\n                    maxWidth: 100,\n                    // cellClass: 'initial-cell',\n                    // minWidth: 100,\n                    // maxWidth: 50,\n                },\n                {\n                    field: 'preparedDate',\n                    headerName: 'Prepared Date',\n                    headerClass: 'rotated-header',\n                    maxWidth: 100,\n                    // cellEditor: 'datePicker',\n                    // cellClass: 'initial-cell',\n                    // minWidth: 100,\n                },\n                {\n                    field: 'explanationRef',\n                    headerName: 'Explanation Ref',\n                    headerClass: 'rotated-header',\n                    maxWidth: 200,\n                },\n                {\n                    field: 'templateRef',\n                    headerName: 'Template Ref',\n                    headerClass: 'rotated-header',\n                    maxWidth: 200,\n                },\n                {\n                    field: 'mfiRef',\n                    headerName: 'MFI #',\n                    maxWidth: 200,\n                    // headerClass: 'rotated-header',\n                },\n                {\n                    field: 'line',\n                    headerName: 'Line #',\n                    maxWidth: 100,\n                    sortable: true,\n                    rowDrag: true,\n                    // headerClass: 'rotated-header',\n                },\n                {\n                    field: 'instruction',\n                    headerName: 'Instructions / Detail',\n                    minWidth: 300,\n                },\n            ],\n            onGridReady: params => {\n                //Sort by order\n                params.columnApi.applyColumnState({\n                    state: [\n                        {\n                            colId: 'line',\n                            sort: 'asc',\n                        },\n                    ],\n                    defaultState: {sort: null},\n                });\n            },\n            sortModel: [{field: 'line', sort: 'asc'}],\n            defaultGroupSortComparator: (a,b) => a.line - b.line,\n            defaultColDef: {\n                flex: 1,\n                editable: true,\n                resizable: true,\n            },\n            headerHeight: 150,\n            getRowNodeId: row => {\n                return row._id;\n            },\n            getContextMenuItems: (params) => { },\n            onCellValueChanged: (params) => { },\n            stopEditingWhenGridLosesFocus: true,\n            // rowDragManaged:true,\n            animateRows: true,\n            // components: { datePicker: getDatePicker() },\n        },\n        getDetailRowData: function (params) {\n            params.successCallback(params.data.tasks);\n        },\n    },\n    rowData: [\n        {\n            _id: 0,\n            title: 'Phase 1',\n            order: 1,\n            tasks: [\n                {\n                    _id: 1,\n                    finalReview: 'WH',\n                    finalReviewDate: now,\n                    review: 'JY',\n                    reviewDate: now,\n                    prepared: 'WH',\n                    preparedDate: now,\n                    explanationRef: '01.01',\n                    templateRef: '02.01',\n                    mfiRef: '01',\n                    line: 1,\n                    instruction: 'Clean out the dog house',\n                },\n                {\n                    _id: 2,\n                    finalReview: '',\n                    finalReviewDate: '',\n                    review: 'JY',\n                    reviewDate: now,\n                    prepared: 'WH',\n                    preparedDate: now,\n                    explanationRef: '01.01',\n                    templateRef: '02.01',\n                    mfiRef: '02',\n                    line: 2,\n                    instruction: 'Clean out the dog house'\n                },\n                {\n                    _id: 3,\n                    finalReview: '',\n                    finalReviewDate: '',\n                    review: 'JY',\n                    reviewDate: now,\n                    prepared: 'WH',\n                    preparedDate: now,\n                    explanationRef: '01.01',\n                    templateRef: '02.01',\n                    mfiRef: '03',\n                    line: 3,\n                    instruction: 'Clean out the dog house'\n                },\n            ]\n        },\n    ],\n};\n\nconst GridExample = props => {\n    const [data, setData] = useState([]);\n    const gridApi = useRef({});\n    const gridColumnApi = useRef({});\n    const sortActive = useRef(true);\n\n    useEffect( () => {\n        //Get the row data\n        let rowData = initialState.rowData;\n\n        //Add the phase id to each task, this will help me know which phase to modify when a\n        //task is modified or a new task is added.\n        rowData.forEach(phase => {\n           phase.tasks.forEach(task => task.phaseId = phase._id)\n        });\n\n        //Update the state\n        setData(rowData);\n    }, []);\n\n    const onGridReady = (params) => {\n        gridApi.current = params.api;\n        params.columnApi.applyColumnState({\n            state: [\n                {\n                    colId: 'order',\n                    sort: 'asc',\n                },\n            ],\n            defaultState: {sort: null},\n        });\n        gridColumnApi.current = params.columnApi;\n    };\n\n    const getContextMenuItems = (params) => {\n        const result = [\n            {\n                name: 'Insert',\n                action: function () {\n                    //I'm going to program this assuming that there is a phase_id in each task.\n                    let row = params.node.data;\n                    let rows = [];\n                    params.api.forEachNode( (node) => rows.push(node.data));\n\n                    console.log(\"phases\", rows);\n\n                    //Find where the row should be inserted, first checking whether we are inserting a phase or task\n                    //If there are tasks that means we are inserting a new phase\n                    if(row.tasks)\n                    {\n                        let phasesToAdd = [createNewPhase(row.order + 1)];\n                        let phasesToUpdate = rows.filter(phase => phase.order > row.order);\n                        phasesToUpdate.forEach(phase => phase.order++);\n\n                        setData(rows.concat(phasesToAdd));\n\n                        params.api.applyTransaction({\n                            add: phasesToAdd,\n                            update: phasesToUpdate\n                        });\n\n                        //Sort by order\n                        params.columnApi.applyColumnState({\n                            state: [\n                                {\n                                    colId: 'order',\n                                    sort: 'asc',\n                                },\n                            ],\n                            defaultState: {sort: null},\n                        });\n                    }\n                    //Otherwise we are inserting a new task\n                    else\n                    {\n                        //Get the phase that the selected task is apart of\n                        let phase = data.find(phase => phase._id === row.phaseId);\n\n                        //Create the new task\n                        let newTask = createNewTask(row.phaseId, row.line + 1);\n\n                        newTask.phaseId = phase._id;\n                        let tasksToAdd = [newTask];\n\n                            //Get the tasks where their line #s need updated.\n                        let tasksToUpdate = phase.tasks.filter(task => task.line > row.line);\n                        tasksToUpdate.forEach(task => task.line++);\n\n                        phase.tasks = phase.tasks.concat(tasksToAdd);\n\n                        //Update the grid\n                        params.api.applyTransaction({\n                            add: tasksToAdd,\n                            update: tasksToUpdate,\n                        });\n\n                        //Sort by line #\n                        params.columnApi.applyColumnState({\n                            state: [\n                                {\n                                    colId: 'line',\n                                    sort: 'asc',\n                                },\n                            ],\n                            defaultState: {sort: null},\n                        });\n                    }\n\n                },\n                cssClasses: ['redFont', 'bold'],\n            },\n        ];\n        return result;\n    };\n\n    const createNewPhase = (order) => {\n        let id = uuidv4();\n        return {\n            title: '<Hit enter to enter the title of this phase>',\n            tasks: [createNewTask(id, 1)],\n            order,\n            _id: id,\n        }\n    };\n\n    const getRowNodeId = (row) => {\n        return row._id;\n    };\n\n    const createNewTask = (phaseId, line, title) => {\n        let dt = DateTime.now().toFormat('MM/dd');\n        return {\n            finalReview: '',\n            finalReviewDate: '',\n            review: '',\n            reviewDate: '',\n            prepared: '',\n            preparedDate: '',\n            explanationRef: '',\n            templateRef: '',\n            mfiRef: '',\n            line: line,\n            phaseId: phaseId,\n            _id: uuidv4(),\n            instruction: title || '<Double click or hit enter to enter task instruction / details>',\n        }\n    };\n\n    initialState.detailCellRendererParams.detailGridOptions.getContextMenuItems = getContextMenuItems;\n    initialState.detailCellRendererParams.detailGridOptions.onRowDragMove = (event) => {\n        let rowData = [];\n        event.api.forEachNode(node => rowData.push(node));\n        const movingNode = event.node;\n        const overNode = event.overNode;\n        const rowNeedsToMove = movingNode !== overNode;\n        console.log('event on row drag move', event);\n        if (rowNeedsToMove) {\n            const movingData = movingNode.data;\n            const overData = overNode.data;\n            const fromIndex = rowData.indexOf(movingData);\n            const toIndex = rowData.indexOf(overData);\n            const newStore = rowData.slice();\n            moveInArray(newStore, fromIndex, toIndex);\n            setData(newStore);\n            event.api.setRowData(newStore);\n            event.api.clearFocusedCell();\n        }\n        function moveInArray(arr, fromIndex, toIndex) {\n            const element = arr[fromIndex];\n            arr.splice(fromIndex, 1);\n            arr.splice(toIndex, 0, element);\n        }\n    };\n    initialState.detailCellRendererParams.detailGridOptions.onSortChanged = () => {\n        const sortModel = gridApi.current.getSortModel();\n        sortActive.current = sortModel && sortModel.length > 0;\n        const suppressRowDrag = sortActive;\n        console.log(\n            'sortActive = ' +\n            sortActive +\n            ', allowRowDrag = ' +\n            suppressRowDrag\n        );\n        gridApi.current.setSuppressRowDrag(suppressRowDrag);\n    };\n\n    initialState.detailCellRendererParams.detailGridOptions.onCellValueChanged = (params) => {\n        console.log(\"cell value changed\", params);\n        //If the line # changes we want to move the other line #'s around\n        if(params.colDef.field === 'line')\n        {\n            let newVal = params.value;\n            let oldVal = params.oldValue;\n            let siblings = [];\n            params.api.forEachNode( (node) => siblings.push(node.data));\n\n            //If the newVal > oldVal get the nodes with line # > oldVal and <= newVal, decrement line #'s\n            if(newVal > oldVal) {\n                if(newVal > siblings.length)\n                    newVal = siblings.length;\n\n                siblings.forEach(sibling => {\n                    if (sibling.line > oldVal && sibling.line <= newVal)\n                        sibling.line--;\n                });\n            }\n            else if(oldVal > newVal) {\n                if(newVal < 1)\n                    newVal = 1;\n                siblings.forEach(sibling => {\n                    if (sibling.line < oldVal && sibling.line >= newVal)\n                        sibling.line++;\n                });\n            }\n\n            //Update the row\n            let row = params.node.data;\n            row.line = newVal;\n            siblings.push(row);\n\n            params.api.applyTransaction({\n                update: siblings\n            });\n\n            //Sort by order\n            params.columnApi.applyColumnState({\n                state: [\n                    {\n                        colId: 'line',\n                        sort: 'asc',\n                    },\n                ],\n                defaultState: {sort: null},\n            });\n        }\n    };\n\n    return (\n        <div style={{ width: '100%', height: 'calc(100% - 50px)' }}>\n            <div\n                id=\"myGrid\"\n                style={{\n                    height: '100%',\n                    width: '100%',\n                }}\n                className=\"ag-theme-alpine\"\n            >\n                <AgGridReact\n                    modules={initialState.modules}\n                    columnDefs={initialState.columnDefs}\n                    defaultColDef={initialState.defaultColDef}\n                    masterDetail={true}\n                    stopEditingWhenGridLosesFocus={true}\n                    // rowDragManaged={true}\n                    // defaultSortColumn={'order'}\n                    sortModel={[{field: 'order', sort: 'asc'}]}\n                    getRowNodeId={getRowNodeId}\n                    popupParent={initialState.popupParent}\n                    detailCellRendererParams={initialState.detailCellRendererParams}\n                    getContextMenuItems={getContextMenuItems}\n                    onGridReady={onGridReady}\n                    // onFirstDataRendered={onFirstDataRendered.bind(this)}\n                    rowData={data}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default GridExample\n\n// function getDatePicker() {\n//     function Datepicker() {}\n//     Datepicker.prototype.init = function (params) {\n//         this.eInput = document.createElement('input');\n//         this.eInput.value = params.value;\n//         this.eInput.classList.add('ag-input');\n//         this.eInput.style.height = '100%';\n//         $(this.eInput).datepicker({ dateFormat: 'dd/mm/yy' });\n//     };\n//     Datepicker.prototype.getGui = function () {\n//         return this.eInput;\n//     };\n//     Datepicker.prototype.afterGuiAttached = function () {\n//         this.eInput.focus();\n//         this.eInput.select();\n//     };\n//     Datepicker.prototype.getValue = function () {\n//         return this.eInput.value;\n//     };\n//     Datepicker.prototype.destroy = function () {};\n//     Datepicker.prototype.isPopup = function () {\n//         return false;\n//     };\n//     return Datepicker;\n// }","import React, {useState, useEffect, useRef} from 'react';\nimport Checkbox from '../Checkbox/Checkbox';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport 'ag-grid-enterprise';\nimport GridExample from \"../../AgGrid/MasterDetail\";\n\n\n/**\n * A Bootstrap styled table\n * @param {columnHeadings, data}\n * @constructor\n */\nconst Table = ( {columnHeadings = [], phases = []} ) => {\n\t//state variables\n\n    //useEffects(Lifecycle Methods)\n    /**\n     * ComponentDidMount: What should happen when this component is first loaded into the DOM\n     */\n    useEffect( () => {\n\t\tconsole.log('headings', columnHeadings);\n\t\tconsole.log(\"phases\", phases);\n    }, []);\n\n\t//Other Methods\n\tconst updateChecked = (e) => {\n\t\tconsole.log('event', e);\n\t\tconsole.log('current target', e.currentTarget);\n\t};\n\n    return (\n\t\t<GridExample>\n\n\t\t</GridExample>\n\t\t// <table className='table table-striped table-dark table-hover table-bordered'>\n\t\t// \t<thead>\n\t\t// \t\t<tr>\n\t\t// \t\t\t{columnHeadings.map( head => <td scope=\"col\" style={head.style ? head.style : {}}>{head.label}</td>)}\n\t\t// \t\t</tr>\n\t\t// \t</thead>\n\t\t// \t<tbody>\n\t\t// \t\t{\n\t\t// \t\t\tphases.map(phase => (\n\t\t// \t\t\t\t<>\n\t\t// \t\t\t\t\t<tr>\n\t\t// \t\t\t\t\t\t<td colSpan={columnHeadings.length}><p className='h4'>{phase.title}</p></td>\n\t\t// \t\t\t\t\t</tr>\n\t\t// \t\t\t\t\t{\n\t\t// \t\t\t\t\t\tphase.tasks.map(row => \n\t\t// \t\t\t\t\t\t\t(\n\t\t// \t\t\t\t\t\t\t\t<tr scope={'row'}>\n\t\t// \t\t\t\t\t\t\t\t\t{columnHeadings.map( head => {\n\t\t// \t\t\t\t\t\t\t\t\t\tlet td = '';\n\t\t// \t\t\t\t\t\t\t\t\t\tif(typeof row[head.value] === 'boolean')\n\t\t// \t\t\t\t\t\t\t\t\t\t\ttd = <Checkbox name={head.value} checked={row[head.value]} updateChecked={updateChecked}></Checkbox>\n\t\t// \t\t\t\t\t\t\t\t\t\telse\n\t\t// \t\t\t\t\t\t\t\t\t\t\ttd = row[head.value]\n\t\t\t\t\n\t\t// \t\t\t\t\t\t\t\t\t\treturn <td scope='col'>{td}</td>\n\t\t// \t\t\t\t\t\t\t\t\t})}\n\t\t// \t\t\t\t\t\t\t\t</tr>\n\t\t// \t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\n\t\t// \t\t\t\t\t\t)\n\t\t// \t\t\t\t\t}\n\t\t// \t\t\t\t</>\n\t\t// \t\t\t))\n\t\t// \t\t}\n\t\t// \t</tbody>\n\t\t// </table>\n    );\n};\n\nexport default Table;","import React, {useState, useEffect, useRef} from 'react';\nimport Table from '../Bootstrap/Table/Table';\nimport { DateTime } from \"luxon\";\nimport './Checklist.scss'\n\n//Checklist schema\nconst columnHeadings = [\n\t{ label: 'Final Reviewed By', value: 'finalReview', style: {transform: 'rotate(90deg)'} },\n\t{ label: 'Final Reviewed Date', value: 'finalReviewDate', style: {transform: 'rotate(90deg)'}  },\n\t{ label: 'Reviewed By', value: 'review', style: {transform: 'rotate(90deg)'}  },\n\t{ label: 'Reviewed Date', value: 'reviewDate', style: {transform: 'rotate(90deg)'}  },\n\t{ label: 'Prepared By', value: 'prepare', style: {transform: 'rotate(90deg)'}  },\n\t{ label: 'Prepared Date', value: 'prepareDate', style: {transform: 'rotate(90deg)'}  },\n\t{ label: 'Explanation Ref', value: 'explanation', style: {transform: 'rotate(90deg)'}  },\n\t{ label: 'Template Ref', value: 'template', style: {transform: 'rotate(90deg)'}  },\n\t{ label: 'Line #', value: 'line' },\n\t{ label: 'Instruction / Detail', value: 'instruction', style: {minWidth: '600px'} },\n]\n\nconst now = DateTime.now().toFormat('MM/dd');\n\nconst checklist = {\n\tphases: [\n\t   {\n\t\t   title: 'Phase 1',\n\t\t   tasks: [\n\t\t\t   {\n\t\t\t\t   finalReview: '',\n\t\t\t\t   finalReviewDate: '',\n\t\t\t\t   review: 'JY',\n\t\t\t\t   reviewDate: now,\n\t\t\t\t   prepared: 'WH',\n\t\t\t\t   preparedDate: now,\n\t\t\t\t   explanation: '01.01',\n\t\t\t\t   template: '02.01',\n\t\t\t\t   line: 1,\n\t\t\t\t   instruction: 'Clean out the dog house'\n\t\t\t   },\n\t\t\t   {\n\t\t\t\t   finalReview: '',\n\t\t\t\t   finalReviewDate: '',\n\t\t\t\t   review: 'JY',\n\t\t\t\t   reviewDate: now,\n\t\t\t\t   prepared: 'WH',\n\t\t\t\t   preparedDate: now,\n\t\t\t\t   explanation: '01.02',\n\t\t\t\t   template: '02.02',\n\t\t\t\t   line: 2,\n\t\t\t\t   instruction: 'Setup sleeping area(pillow blankets, etc.'\n\t\t\t   },\n\t\t\t   {\n\t\t\t\t   finalReview: '',\n\t\t\t\t   finalReviewDate: '',\n\t\t\t\t   review: 'JY',\n\t\t\t\t   reviewDate: now,\n\t\t\t\t   prepared: 'WH',\n\t\t\t\t   preparedDate: now,\n\t\t\t\t   explanation: '01.02',\n\t\t\t\t   template: '02.02',\n\t\t\t\t   line: 2,\n\t\t\t\t   instruction: 'Sneak the bucket of ice cream out and hide it under your pillow'\n\t\t\t   }\n\t\t   ]\n\t   },\n\t   {\n\t\t   title: 'Phase 2',\n\t\t   tasks: [\n\t\t\t   {\n\t\t\t\t   finalReview: '',\n\t\t\t\t   finalReviewDate: '',\n\t\t\t\t   review: 'JY',\n\t\t\t\t   reviewDate: now,\n\t\t\t\t   prepared: 'WH',\n\t\t\t\t   preparedDate: now,\n\t\t\t\t   explanation: '01.01',\n\t\t\t\t   template: '02.01',\n\t\t\t\t   line: 3,\n\t\t\t\t   instruction: 'Setup rain cover in case it rains'\n\t\t\t   },\n\t\t\t   {\n\t\t\t\t   finalReview: '',\n\t\t\t\t   finalReviewDate: '',\n\t\t\t\t   review: 'JY',\n\t\t\t\t   reviewDate: now,\n\t\t\t\t   prepared: 'WH',\n\t\t\t\t   preparedDate: now,\n\t\t\t\t   explanation: '01.02',\n\t\t\t\t   template: '02.02',\n\t\t\t\t   line: 4,\n\t\t\t\t   instruction: 'Prepare dinner (there\\'s dog food somewhere)'\n\t\t\t   }\n\t\t   ]\n\t   },\n\t   {\n\t\t   title: 'Phase 3',\n\t\t   tasks: [\n\t\t\t   {\n\t\t\t\t   finalReview: '',\n\t\t\t\t   finalReviewDate: '',\n\t\t\t\t   review: 'JY',\n\t\t\t\t   reviewDate: now,\n\t\t\t\t   prepared: 'WH',\n\t\t\t\t   preparedDate: now,\n\t\t\t\t   explanation: '01.01',\n\t\t\t\t   template: '02.01',\n\t\t\t\t   line: 5,\n\t\t\t\t   instruction: 'Go to sleep'\n\t\t\t   },\n\t\t\t   {\n\t\t\t\t   finalReview: '',\n\t\t\t\t   finalReviewDate: '',\n\t\t\t\t   review: 'JY',\n\t\t\t\t   reviewDate: now,\n\t\t\t\t   prepared: 'WH',\n\t\t\t\t   preparedDate: now,\n\t\t\t\t   explanation: '01.02',\n\t\t\t\t   template: '02.02',\n\t\t\t\t   line: 6,\n\t\t\t\t   instruction: 'Wake up'\n\t\t\t   },\n\t\t\t   {\n\t\t\t\t   finalReview: '',\n\t\t\t\t   finalReviewDate: '',\n\t\t\t\t   review: 'JY',\n\t\t\t\t   reviewDate: now,\n\t\t\t\t   prepared: 'WH',\n\t\t\t\t   preparedDate: now,\n\t\t\t\t   explanation: '01.02',\n\t\t\t\t   template: '02.02',\n\t\t\t\t   line: 6,\n\t\t\t\t   instruction: 'Bully Nate because you woke up on the wrong side of the lawn and it\\'s his fault'\n\t\t\t   }\n\t\t   ]\n\t   },\n\t]\n}\n\n/**\n * Loads in the checklist corresponding to the id passed\n * @param {checklistId, ...props}\n * @constructor\n */\nconst Checklist = ( {checklistId, ...props} ) => {\n    //state variables\n\n    //useEffects(Lifecycle Methods)\n    /**\n     * ComponentDidMount: What should happen when this component is first loaded into the DOM\n     */\n    useEffect( () => {\n\n    }, []);\n\n    //Other Methods\n\n    return (\n\t\t<div style={ {height: '100%'} }>\n\t\t\t<h2>Checklist</h2>\n\t\t\t<Table columnHeadings={columnHeadings} phases={checklist.phases}></Table>\n\t\t</div>\n        \n    );\n};\n\nexport default Checklist;","import axios from \"axios\";\n\nfunction loginUser(loginData){  \n  return axios.post(\"/api/users/login\",loginData);\n}\n\nfunction createUser(userData){  \n    return axios.post(\"/api/users/\",userData);\n}\n\nfunction updateUser(id, userData){\n  console.log(\"Updating User:\",id);\n  console.log(\"With Data:\",userData);\n    return axios.put(`/api/users/${id}`,userData);\n}\nexport default {\n  loginUser,\n  createUser,\n  updateUser\n};","import React, { useRef, useContext } from \"react\";\nimport {UserContext} from \"../../utils/userContext\";\nimport API from \"../../utils/API\";\n\nfunction EditUser(props) {\n    const idRef = useRef();\n    const firstRef = useRef();\n    const middleRef = useRef();\n    const lastRef = useRef();\n    const emailRef = useRef();\n    const passRef = useRef();\n    const confirmPassRef = useRef();\n    const activeRef = useRef();\n    const { user } = useContext(UserContext);\n\n    const handleUpdate = async (event) => {\n        event.preventDefault();\n\n        // Animate button click\n        // await animateCSS('#updateUser','bounce');\n\n        // Collect values from the updateUser form\n        if (passRef.current.value !== confirmPassRef.current.value) {\n            alert('Passwords do not match.');\n        } else {\n            const userData = {};\n            if(firstRef.current.value){\n                userData.firstname = firstRef.current.value;\n            }\n            if(middleRef.current.value){\n                userData.middlename = middleRef.current.value;\n            }\n            if(lastRef.current.value){\n                userData.lastname = lastRef.current.value;\n            }\n            if(emailRef.current.value){\n                userData.email = emailRef.current.value;\n            }\n            if(passRef.current.value){\n                userData.password = passRef.current.value;\n            }\n\n            const response = await API.updateUser(idRef.current.value,\n                userData\n            );\n            console.log(\"response:\", response);\n            if (response.ok) {\n                document.location.replace(`/users/${response.data.id}`);\n            } else {\n                alert(response.statusText);\n            }\n        }\n    };\n\n    return (\n        <section className=\"col-sm-9\">\n            <div className=\"row\">\n                <h2 className=\"col text-center\" id=\"editUserHeader\">Edit {user.firstname}</h2>\n            </div>\n            <form className=\"form user-form\" id=\"userForm\" onSubmit={handleUpdate}>\n                <div className=\"row\">\n                    <div className=\"col text-end\" id=\"firstnameLabel\">First Name:</div>\n                    <input className=\"col form-control\" type=\"text\" id=\"firstname-user\" ref={firstRef} placeholder={user.firstname}/>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-end\" id=\"middlenameLabel\">Middle Name:</div>\n                    <input className=\"col form-control\" type=\"text\" id=\"middlename-user\" ref={middleRef} placeholder={user.middlename}/>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-end\" id=\"lastnameLabel\">Last Name:</div>\n                    <input className=\"col form-control\" type=\"text\" id=\"lastname-user\" ref={lastRef} placeholder={user.lastname}/>\n                </div><div className=\"row\">\n                    <div className=\"col text-end\" id=\"emailLabel\">Email:</div>\n                    <input className=\"col form-control\" type=\"email\" id=\"email-user\" ref={emailRef} placeholder={user.email}/>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-end\" id=\"passwordLabel\">New Password:</div>\n                    <input className=\"col form-control\" type=\"password\" id=\"password-user\" ref={passRef}/>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-end\" id=\"confirmLabel\">Confirm New Password:</div>\n                    <input className=\"col form-control\" type=\"password\" id=\"password-confirm\" ref={confirmPassRef} />\n                </div>       \n                <div className=\"row\">\n                    <input type=\"hidden\" id=\"user_id\" ref={idRef} value={user._id} />\n                    <button className=\"mx-auto col-auto btn btn-primary\" type=\"submit\" id=\"updateUser\">Update User</button>\n                </div>\n            </form>\n        </section >\n    );\n}\n\nexport {\n    EditUser\n};","import React, { useContext } from \"react\";\nimport { EditUser } from \"./EditUser\";\nimport { UserContext } from \"../../utils/userContext\";\n\nfunction Profile(props) {\n    const { user }  = useContext(UserContext);\n    return (\n        <section className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-auto mx-auto\">\n                    <h2>Welcome, {user.firstname}!</h2>\n                </div>\n            </div>\n            <div className=\"row\">\n                {/* Left column section */}\n                <section className=\"col-sm-3 bg-company-secondary\">\n                </section>\n                {/* Main content section */}\n                <EditUser></EditUser>\n                {/* Right column section */}\n            </div>\n        </section>\n    );\n}\n\nexport {\n    Profile\n};","import React, { useRef, useContext } from \"react\";\nimport API from \"../../utils/API\";\nimport { UserContext } from \"../../utils/userContext\";\n\nfunction Login(props) {\n    const emailRef = useRef();\n    const passRef = useRef();\n    const userContext = useContext(UserContext);     \n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n\n        // Animate button click\n        // await animateCSS('#login','bounce');\n\n        // Collect values from the login form\n        if (emailRef.current.value && passRef.current.value) {\n            await API.loginUser(\n                { \n                    \"email\": emailRef.current.value,\n                    \"password\": passRef.current.value \n                }\n                )\n                .then((res)=>{\n                    userContext.setUser(res.data);\n                    localStorage.setItem(\"user\", JSON.stringify(res.data));                    \n                })\n                .then(()=>{\n                    document.location.replace(\"/users/\");\n                })\n                .catch((error)=>{\n                    console.log(\"Something Happened:\",error);\n                    alert(error);\n                });\n        }\n    };\n\n    return (\n        <section className=\"container text-center\">\n            <div className=\"row\">\n                <h2 className=\"col\" id=\"loginHeader\">Login</h2>\n            </div>\n            <form className=\"form login-form\" id=\"loginForm\" onSubmit={handleLogin}>\n                <div className=\"row\">\n                    <div className=\"col text-end\" id=\"emailLabel\">Email:</div>\n                    <input className=\"col form-control\" type=\"email\" id=\"email-login\" ref={emailRef}/>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-end\" id=\"passwordLabel\">Password:</div>\n                    <input className=\"col form-control\" type=\"password\" id=\"password-login\" ref={passRef}/>\n                </div>\n                <button className=\"col btn btn-primary\" type=\"submit\" id=\"login\">Login</button>\n            </form>\n            <div className=\"row\">\n                <p>New User? <a href=\"/users/signup\" id=\"signup\">Sign-Up Instead</a></p>\n            </div>\n        </section>\n    );\n}\n\nexport {\n    Login\n};","import React, { useRef } from \"react\";\nimport API from \"../../utils/API\";\n\nfunction Signup(props) {\n    const firstRef = useRef();\n    const middleRef = useRef();\n    const lastRef = useRef();\n    const emailRef = useRef();\n    const passRef = useRef();\n    const confirmPassRef = useRef();\n\n    const handleSignup = async (event) => {\n        event.preventDefault();\n\n        // Animate button click\n        // await animateCSS('#signUp','bounce');\n\n        // Collect values from the signup form\n        if (passRef.current.value !== confirmPassRef.current.value) {\n            alert('Passwords do not match.');\n        } else if (firstRef.current.value && emailRef.current.value && passRef.current.value && confirmPassRef.current.value) {\n            const response = await API.createUser(\n                {\n                    \"firstname\": firstRef.current.value,\n                    \"middlename\": middleRef.current.value,\n                    \"lastname\": lastRef.current.value,\n                    \"email\": emailRef.current.value,\n                    \"password\": passRef.current.value,\n                    \"active\": true,\n                    \"roles\": []\n                }\n            );\n            console.log(\"response:\", response);\n            if (response.ok) {\n                document.location.replace('/');\n            } else {\n                alert(response.statusText);\n            }\n        }\n    };\n\n    return (\n        <section className=\"container text-center\">\n            <div className=\"row\">\n                <h2 className=\"col\" id=\"signupHeader\">Signup</h2>\n            </div>\n            <form className=\"form signup-form\" id=\"signupForm\" onSubmit={handleSignup}>\n                <div className=\"row\">\n                    <div className=\"col text-end\" id=\"firstnameLabel\">First Name:</div>\n                    <input className=\"col form-control\" type=\"text\" id=\"firstname-signup\" ref={firstRef}/>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-end\" id=\"middlenameLabel\">Middle Name:</div>\n                    <input className=\"col form-control\" type=\"text\" id=\"middlename-signup\" ref={middleRef}/>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-end\" id=\"lastnameLabel\">Last Name:</div>\n                    <input className=\"col form-control\" type=\"text\" id=\"lastname-signup\" ref={lastRef}/>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-end\" id=\"emailLabel\">Email:</div>\n                    <input className=\"col form-control\" type=\"email\" id=\"email-signup\" ref={emailRef}/>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-end\" id=\"passwordLabel\">Password:</div>\n                    <input className=\"col form-control\" type=\"password\" id=\"password-signup\" ref={passRef}/>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-end\" id=\"confirmLabel\">Confirm Password:</div>\n                    <input className=\"col form-control\" type=\"password\" id=\"password-confirm\" ref={confirmPassRef}/>\n                </div>\n                <button className=\"col btn btn-primary\" type=\"submit\" id=\"signUp\">Sign-Up</button>\n            </form>\n            <div className=\"row\">\n                <p>Already a Member? <a href=\"/users/login\" id=\"login\">Login Instead</a></p>\n            </div>\n        </section>\n    );\n}\n\nexport {\n    Signup\n};","import React, { useReducer } from \"react\";\n\nfunction Footer(){\n    const initFooter = {\n        text: \"Copyright \" + new Date().getFullYear()        \n    };\n\n    function changeFooter(currentFooter, change){\n        return {...currentFooter, change};\n    }\n\n    const [footerData, setFooterData] = useReducer(changeFooter, initFooter);\n\n    return (\n        <footer className=\"container-fluid fixed-bottom mb-0 bg-light\">\n            <section className=\"row\">\n                <div className=\"col text-center\"><i className=\"fas fa-copyright\"></i> {footerData.text}</div>\n            </section>\n        </footer>        \n    );\n}\n\nexport {\n    Footer\n};","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport Nav from \"./components/Nav\";\nimport Homepage from \"./containers/Homepage/Homepage\";\nimport Checklist from \"./components/Checklist/Checklist\";\nimport { Profile } from \"./containers/Users/Profile\";\nimport { Login } from \"./containers/Users/Login\";\nimport { Signup } from \"./containers/Users/Signup\";\nimport { Footer } from \"./components/Footer\";\nimport { UserContext } from \"./utils/userContext\";\n\nfunction App() {\n\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    setUser(JSON.parse(localStorage.getItem(\"user\")));\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <Header />\n      <Router>\n        <div id=\"app\">\n          <Nav />\n          <div className={'container-fluid'}>\n            <Switch>\n              {/* What should the homepage be? */}\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/checklist/:id\">\n                <Checklist />\n              </Route>\n\n              {/* User Related Pages */}\n              <Route exact path=\"/users/login/\">\n                <Login />\n              </Route>\n              <Route exact path=\"/users/signup/\">\n                <Signup />\n              </Route>\n              <Route exact path=\"/users/\">\n                <Profile />\n              </Route>\n              <Route exact path=\"/users/:id\">\n                {/* <Users /> */}\n              </Route>\n\n              <Route>{/* <NoMatch /> */}</Route>\n            </Switch>\n          </div>\n        </div>>\n      </Router>\n      <Footer />\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}